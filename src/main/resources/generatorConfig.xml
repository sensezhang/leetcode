<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <properties resource="config.properties" />
    <context id="Default" targetRuntime="MyBatis3" defaultModelType="flat">
        <property name="javaFileEncoding" value="utf-8"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <!-- Lombok插件 去除模型中的get和set ,用@Data注解取代 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.LombokPlugin">
            <!-- @Data 默认开启,同时插件会对子类自动附加@EqualsAndHashCode(callSuper = true)，@ToString(callSuper = true) -->
            <property name="@Get" value="true"/>
            <property name="@Set" value="true"/>
            <!-- @Builder 必须在 Lombok 版本 >= 1.18.2 的情况下开启，对存在继承关系的类自动替换成@SuperBuilder -->
            <property name="@Builder" value="false"/>
            <!-- @NoArgsConstructor 和 @AllArgsConstructor 使用规则和Lombok一致 -->
            <property name="@AllArgsConstructor" value="false"/>
            <property name="@NoArgsConstructor" value="false"/>
        </plugin>
        <!-- 注释 -->
        <commentGenerator>
            <!-- 是否取消注释 true:否 false:是 -->
            <property name="suppressAllComments" value="false"/>
            <!-- 是否生成注释代时间戳 -->
            <property name="suppressDate" value="false"/>
            <!-- 生成时间的格式-->
            <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss "/>
            <!-- 是否带上数据库字段备注信息，只有suppressAllComments为false时才生效-->
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>
        <jdbcConnection driverClass="${jdbc.driverClass}"
                        connectionURL="${jdbc.urlMapping}"
                        userId="${jdbc.user}"
                        password="${jdbc.password}" />
        <!-- 类型转换 -->
        <javaTypeResolver>
            <!--是否使用bigDecimal，默认false。
                false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
                true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal-->
            <property name="forceBigDecimals" value="true"/>
            <!--是否使用转换日期，默认false
                false，将所有 JDBC 的时间类型解析为 java.util.Date
                true，将 JDBC 的时间类型按如下规则解析
                    DATE	                -> java.time.LocalDate
                    TIME	                -> java.time.LocalTime
                    TIMESTAMP               -> java.time.LocalDateTime
                    TIME_WITH_TIMEZONE  	-> java.time.OffsetTime
                    TIMESTAMP_WITH_TIMEZONE	-> java.time.OffsetDateTime
                -->
            <!--<property name="useJSR310Types" value="false"/>-->
        </javaTypeResolver>
        <javaModelGenerator targetPackage="${package.base}.${domain.package}" targetProject="src/main/java"/>

        <sqlMapGenerator targetPackage="${package.base}.${mapper.package}.mapper" targetProject="src/main/java"/>

        <javaClientGenerator type="XMLMAPPER" targetPackage="${package.base}.${mapper.package}.mapper" targetProject="src/main/java"/>

        <table tableName="${gen.tables}" domainObjectName="${gen.domin}"/>

        <!-- 可以配置多个table，根据需要生成对应的Model、Mapper等 -->
    </context>
</generatorConfiguration>
